# Docker Compose para AGI Force MVP
# Orquesta el entorno completo de desarrollo

services:
  # Base de datos PostgreSQL 16
  postgres:
    image: postgres:16-alpine
    container_name: agi-force-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: agi_force_mvp
      POSTGRES_USER: agi_user
      POSTGRES_PASSWORD: agi_pass
      POSTGRES_INITDB_ARGS: "--encoding=UTF8 --locale=C"
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init:/docker-entrypoint-initdb.d
    networks:
      - agi-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U agi_user -d agi_force_mvp"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Aplicación AGI Force MVP
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: agi-force-app
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: agi_force_mvp
      DB_USER: agi_user
      DB_PASSWORD: agi_pass
      DB_SSL: "false"
    ports:
      - "3000:3000"
      - "9229:9229"  # Puerto para debugging
    volumes:
      - .:/app
      - /app/node_modules  # Evitar sobrescribir node_modules
      - npm_cache:/home/agi/.npm
    networks:
      - agi-network
    depends_on:
      postgres:
        condition: service_healthy
    command: npm run dev

  # Redis para cache (opcional, para futuras mejoras)
  redis:
    image: redis:7-alpine
    container_name: agi-force-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - agi-network
    command: redis-server --appendonly yes

  # pgAdmin para administración de base de datos (desarrollo)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: agi-force-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@agiforce.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "8080:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
      - ./docker/pgadmin/servers.json:/pgadmin4/servers.json
    networks:
      - agi-network
    depends_on:
      - postgres

# Volúmenes persistentes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  npm_cache:
    driver: local

# Red personalizada
networks:
  agi-network:
    driver: bridge
    name: agi-force-network