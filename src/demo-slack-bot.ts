#!/usr/bin/env node

/**
 * Demo de integraci√≥n completa Slack Bot + PulseDesk
 * 
 * Este archivo demuestra c√≥mo usar el bot avanzado con
 * todas las funcionalidades integradas.
 */

import { AdvancedSlackBot } from './bots/advanced-slack-bot.js';

async function demoSlackBot() {
  console.log('üé¨ === DEMO: PulseDesk Slack Bot ===\n');

  try {
    // Crear instancia del bot
    console.log('1Ô∏è‚É£ Creando instancia del bot...');
    const bot = new AdvancedSlackBot();

    // Mostrar configuraci√≥n
    console.log('2Ô∏è‚É£ Bot configurado con:');
    console.log('   - Socket Mode habilitado');
    console.log('   - Integraci√≥n PulseDesk workflow');
    console.log('   - Manejo de mensajes directos');
    console.log('   - Manejo de menciones');
    console.log('   - Comandos slash /pulse');
    console.log('   - Botones interactivos');

    // Configurar manejo de se√±ales
    console.log('\n3Ô∏è‚É£ Configurando shutdown elegante...');
    
    process.on('SIGINT', async () => {
      console.log('\n‚è∏Ô∏è  Cerrando demo...');
      await bot.stop();
      console.log('‚úÖ Demo terminado exitosamente');
      process.exit(0);
    });

    // Iniciar bot
    console.log('\n4Ô∏è‚É£ Iniciando bot de Slack...');
    await bot.start();

    // Mostrar instrucciones de uso
    console.log('\nüéâ ¬°Bot iniciado exitosamente!');
    console.log('\nüì± === C√ìMO PROBAR EL BOT ===');
    console.log('1. Env√≠a un mensaje directo al bot:');
    console.log('   "Hola, ¬øpuedes ayudarme?"');
    console.log('\n2. Menciona el bot en un canal:');
    console.log('   "@pulsedesk necesito ayuda con un email"');
    console.log('\n3. Usa el comando slash (si est√° configurado):');
    console.log('   "/pulse enviar email urgente"');
    console.log('\n4. Interact√∫a con los botones que aparezcan');

    console.log('\nüîß === EJEMPLOS DE MENSAJES PARA PROBAR ===');
    console.log('‚Ä¢ "hola" ‚Üí Saludo personalizado');
    console.log('‚Ä¢ "ayuda" ‚Üí Men√∫ de comandos');
    console.log('‚Ä¢ "email a juan@ejemplo.com" ‚Üí Procesamiento de email');
    console.log('‚Ä¢ "crear tarea urgente" ‚Üí Gesti√≥n de tareas');
    console.log('‚Ä¢ "¬øc√≥mo est√°s?" ‚Üí Respuesta conversacional');

    console.log('\n‚å®Ô∏è  Presiona Ctrl+C para detener el bot');
    console.log('üìä Monitorea los logs para ver la actividad...\n');

  } catch (error) {
    console.error('‚ùå Error en el demo:', error);
    
    if (error instanceof Error) {
      if (error.message.includes('SLACK_BOT_TOKEN')) {
        console.log('\nüí° SOLUCI√ìN: Configura tus tokens de Slack en .env');
        console.log('   1. Copia .env.example a .env');
        console.log('   2. Visita https://api.slack.com/apps');
        console.log('   3. Configura tu app de Slack');
        console.log('   4. Copia los tokens a .env');
      }
      
      if (error.message.includes('Socket')) {
        console.log('\nüí° SOLUCI√ìN: Habilita Socket Mode en tu Slack App');
        console.log('   1. Ve a Socket Mode en tu app config');
        console.log('   2. Activa "Enable Socket Mode"');
        console.log('   3. Genera App-Level Token con scope connections:write');
      }
    }
    
    process.exit(1);
  }
}

// Mostrar ayuda si se usa --help
if (process.argv.includes('--help') || process.argv.includes('-h')) {
  console.log('ü§ñ PulseDesk Slack Bot Demo\n');
  console.log('Uso:');
  console.log('  npm run demo:slack           # Ejecutar demo');
  console.log('  npm run demo:slack -- --help # Mostrar ayuda');
  console.log('\nAntes de ejecutar:');
  console.log('  1. Configura .env con tus tokens de Slack');
  console.log('  2. Aseg√∫rate de tener una Slack App configurada');
  console.log('  3. Habilita Socket Mode en tu app');
  console.log('\nPara m√°s informaci√≥n, lee: docs/slack-bot-guide.md');
  process.exit(0);
}

// Ejecutar demo
if (require.main === module) {
  demoSlackBot();
}